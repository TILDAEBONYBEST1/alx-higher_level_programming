# doctest_100-matrix_mul.txt
===============================
Tests to 100-matrix_mul.txt
===============================

This library is for multiply two matrix
``matrix_mul(m_a, m_b):``.

File ``100-matrix_mul.py``

Return: New matrix with the result

Importing the function:

	  >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test to realize:

     >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
     [[7, 10], [15, 22]]

     >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
     [[13, 16]]

     >>> matrix_mul([[3, -2], [1, 2]], [[1, 1], [1, 1]])
     [[1, 1], [3, 3]]

     >>> matrix_mul([[1.0, 1.0], [2.0, 2.0]], [[1, 1], [1, 1]])
     [[2.0, 2.0], [4.0, 4.0]]

     >>> matrix_mul("JavaScript", [[2, 5]])
     Traceback (most recent call last):
	  ...
     TypeError: m_a must be a list

     >>> matrix_mul([[2], [5]], "JavaScript")
     Traceback (most recent call last):
	  ...
     TypeError: m_b must be a list

     >>> matrix_mul(["C is", "Fun"], [[50, 25]])
     Traceback (most recent call last):
	  ...
     TypeError: m_a must be a list of lists

     >>> matrix_mul([[7.5, 30]], ["C is", "Fun"])
     Traceback (most recent call last):
	  ...
     TypeError: m_b must be a list of lists

     >>> matrix_mul([], [[1.9, 90]])
     Traceback (most recent call last):
	  ...
     ValueError: m_a can't be empty

     >>> matrix_mul([[2, 1]], [[]])
     Traceback (most recent call last):
	  ...
     ValueError: m_b can't be empty

     >>> matrix_mul([[3, (1, )], [9, 5]], [[2, 0], [4, 0]])
     Traceback (most recent call last):
	  ...
     TypeError: m_a should contain only integers or floats

     >>> matrix_mul([[3, 1], [9, 5]], [[2, "Diego"], [5, []]])
     Traceback (most recent call last):
	  ...
     TypeError: m_b should contain only integers or floats

     >>> matrix_mul([[3, 8], [0.5]], [[3, 1], [5.2, 51]])
     Traceback (most recent call last):
	  ...
     TypeError: each row of m_a must be of the same size

     >>> matrix_mul([[1, 0], [50, 9.5]], [[5], [10, 80]])
     Traceback (most recent call last):
	  ...
     TypeError: each row of m_b must be of the same size

     >>> matrix_mul([[3, 1, 9], [5, 2, 0]], [[2, 1], [10, 4]])
     Traceback (most recent call last):
	  ...
     ValueError: m_a and m_b can't be multiplied

     >>> matrix_mul([[1, 2], [3, 4]])
     Traceback (most recent call last):
	  ...
     TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

     >>> matrix_mul()
     Traceback (most recent call last):
	  ...
     TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
